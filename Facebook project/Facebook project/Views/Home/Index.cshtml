@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@using System.Drawing;
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@model IEnumerable<Post>
@{
    ViewData["Title"] = "Home Page";
    ViewData["id"] = 0;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


@if (SignInManager.IsSignedIn(User))
{

    var claimsIdentity = (ClaimsIdentity)this.User.Identity;
    var claim = claimsIdentity.FindFirst(ClaimTypes.NameIdentifier);
    var userId = claim.Value;
    <br />
    <a asp-controller="Posts"
   asp-action="UserInfoModal"
      asp-route-id="@userId" >Profile Page</a>

    <br />
    <div class="container">
        <div class="row">
            <div class="col-3">
                <i class="btn fas fa-user-friends" onclick="FriendRequestsModal()"></i>
            </div>
            <div class="col-8">
                <div class="dropdown">
                    <input type="text" placeholder="Search.." id="myInput" onkeyup="Search()" onfocus="showResults()" onfocusout="hideResults()">
                    <div id="myDropdown" class="dropdown-content show">
                        @*search Results Here*@
                    </div>
                </div>
            </div>
        </div>
    </div>

    <p>

        <div class="container">
            <div class="row">


                <input type="text" style="height: 100px" readonly id="CreatePost" class="col-12"
                       data-toggle="modal" data-target="#openModal" value="What's on your mind" />

            </div>
        </div>
    </p>




    @await Html.PartialAsync("~/Views/Posts/_Create.cshtml", new Post());


    <div id="LikesDiv"></div>
    <div id="FriendRequestsDiv"></div>
    <div id="ConfirmDeleteDiv"></div>
    <div id="EditPostDiv"></div>
    <div id="EditCommentDiv"></div>

    <div id="postsContainer" class="container">
        @foreach (var item in Model)
        {
            @await Html.PartialAsync("~/Views/Posts/_Post.cshtml", item);
        }
    </div>

}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>


<script type="text/javascript">

    $(document).ready(function () {
        $("#CreatePost").click(function () {
            $("#PopupContainer").modal("toggle");
        });
    });

    function addComment(postId) {
        var id = '#commentArea' + postId;
        var comment = document.querySelector(id).value;

        var CommentImgId = '#commentImg' + postId;

        var data = new FormData();
        var files = $(CommentImgId).get(0).files;

        if (files.length > 0) {
            data.append("CommentImg", files[0]);
        }

        data.append("Comment", comment);
        data.append("PostId", postId);

        $.ajax({
            type: "POST",
            url: "Posts/AddComment",
            data: data,
            processData: false,
            contentType: false,

            success: function (response) {

                var targetPostId = "#post" + postId;
                var targetPost = document.querySelector(targetPostId);
                targetPost.innerHTML += response;

            },
            error: function (response) {
                alert("Error while submiting comment");
            }
        });

        document.querySelector(id).value = "";
    }

    function editPost(postId) {

        var text = document.querySelector('#EditPostText').value;
        var data = new FormData();
        var files = $("#postImgSelector").get(0).files;
        var src = document.querySelector('#EditpostImg').src;
        var isImgSelected = src.includes('jpg') || src.includes('jpeg');

        if (text == "" && !isImgSelected) {
            alert("Post cannot be empty");
            return;
        }


        if (files.length > 0) {
            data.append("postImg", files[0]);
        }

        data.append("postText", text);
        data.append("postId", postId);
        if (isImgSelected) {
            data.append("removeImg", false);
        }
        else {
            data.append("removeImg", true);
        }

        $.ajax({
            type: "POST",
            url: "Posts/EditPost",
            data: data,
            processData: false,
            contentType: false,
            success: function (response) {

                var respPostId = Object.values(response)[0];
                var respText = Object.values(response)[4];
                var respImg = Object.values(response)[5];

                var imgDivId = '#PostImgDiv' + postId
                var textDivId = '#PostTextDiv' + postId


                if (respImg == null) {
                    respImg = "";
                }

                if (($(imgDivId)).children().length > 0) {

                    var ImgTag = (document.querySelector(imgDivId)).firstElementChild;
                    if (respImg == "")
                        ImgTag.src = "";
                    else
                        ImgTag.src = '/PostsPics/' + respImg;
                }
                else {
                    var ImgTag = '<img class="img-fluid" src="/PostsPics/' + respImg + '" />';
                    (document.querySelector(imgDivId)).innerHTML += ImgTag;
                }

                if (respText != null) {

                    if (($(textDivId)).children().length > 0) {

                        var TextTag = (document.querySelector(textDivId)).firstElementChild;
                        TextTag.innerText = respText;
                    }
                    else {
                        var TextTag = '<p class="col-form-label">' + respText + '</p>';
                        (document.querySelector(textDivId)).innerHTML += TextTag;
                    }

                }

            },
            error: function () {
                alert("Error Editing Post");
            }
        });
    }

    function addPost(signedInUserId) {
        var postText = document.querySelector("#postText").value;

        var data = new FormData();
        var files = $("#creatPostImgSelector").get(0).files;

        if (files.length > 0) {
            data.append("postImg", files[0]);
        }
        else {
            if (postText == "") {
                alert("Cannot create an empty post");
                return;
            }
        }

        data.append("postText", postText);

        $.ajax({
            type: "POST",
            url: "Posts/AddPost",
            data: data,
            processData: false,
            contentType: false,

            success: function (response) {

                document.querySelector("#postsContainer").insertAdjacentHTML('afterbegin', response);

                document.querySelector("#postText").value = "";
                document.querySelector('#creatPostImgSelector').remove();
                document.querySelector('#creatPostImgSelectorDiv').innerHTML += '<input type="file" name="file" id="creatPostImgSelector" style="width: 100%;" />';
                document.querySelector('#createPostImg').src = "";
            },
            error: function (response) {
                alert("Error submiting Post");
            }
        });

        $("#PopupContainer").modal("toggle");
    }

    function LikesModal(id) {

        $.ajax({
            type: "GET",
            url: "Posts/LikesModal/" + id,
            success: function (response) {
                $("#LikesDiv").html(response);
                $("#LikesPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    };

    function FriendRequestsModal() {

        $.ajax({
            type: "GET",
            url: "Friends/FriendRequestsModal/",
            success: function (response) {
                $("#FriendRequestsDiv").html(response);
                $("#FriendRequestsPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    };

    function Like(caller, id) {

        var counterid = '#likes' + id;
        var likeCounter = document.querySelector(counterid);
        var countVal = likeCounter.innerHTML;

        if (caller.classList.contains("fa-thumbs-up")) {


            $.ajax({
                type: "POST",
                url: "Posts/Like/" + id,
                success: function () {
                    countVal++;
                    likeCounter.innerHTML = countVal;
                    caller.classList.remove("fa-thumbs-up");
                    caller.classList.add("fa-thumbs-down");
                },
                error: function () {
                    alert("Error while liking post");
                }
            });

        }
        else if (caller.classList.contains("fa-thumbs-down")) {


            $.ajax({
                type: "POST",
                url: "Posts/Dislike/" + id,
                success: function () {
                    countVal--;
                    likeCounter.innerHTML = countVal;
                    caller.classList.remove("fa-thumbs-down");
                    caller.classList.add("fa-thumbs-up");
                },
                error: function () {
                    alert("Error while Disliking post");
                }
            });


        }



    }

    function FriendRequest(caller, ReqUserId) {
        var RID = '#request' + ReqUserId;
        var RequestElement = document.querySelector(RID);
        if (caller.classList.contains("Accept")) {
            $.ajax({
                type: "POST",
                url: "Friends/AcceptRequest/" + ReqUserId,
                success: function () {
                    RequestElement.remove();
                },
                error: function () {
                    alert("Error while liking post");
                }
            });
        }
        else if (caller.classList.contains("Reject")) {

            $.ajax({
                type: "POST",
                url: "Friends/RejectRequest/" + ReqUserId,
                success: function () {
                    RequestElement.remove();
                },
                error: function () {
                    alert("Error while liking post");
                }
            });
        }
    }

    function Search() {
        var searchKey = $('#myInput').val();

        $.ajax({
            type: "GET",
            url: "Friends/Search/" + searchKey,
            success: function (response) {
                console.log(response);

                var tagsStr = "";
                for (var i = 0; i < response.length; i++) {
                    var obj = response[i];


                    if (obj.hasOwnProperty("fullName") &&
                        obj.hasOwnProperty("id") &&
                        obj.hasOwnProperty("photoURL")) {

                        var fullName = obj['fullName'];
                        var userId = obj['id'];
                        var photoUrl = obj['photoURL'];

                        tagsStr += '<div class="col-8"><img class="navbar-toggler-icon" src="/ProfilPics/' + photoUrl + '" />';
                        tagsStr += '<a class="ml-2 d-inline" id="' + userId + '" href = "#" > ' + fullName + '</a></div >';

                    }
                }

                document.querySelector("#myDropdown").innerHTML = tagsStr;





            },
            error: function () {
                alert("Error");
            }
        });
    }

    function showResults() {
        var results = document.querySelector("#myDropdown");
        if (!results.classList.contains("show")) {
            results.classList.add("show");
        }
    }

    function hideResults() {
        var results = document.querySelector("#myDropdown");
        if (results.classList.contains("show")) {
            results.classList.remove("show");
        }
    }

    function ConfirmDeleteModal(Id) {

        $.ajax({
            type: "GET",
            url: "Posts/ConfirmDeleteModal/",
            data: { objId: Id },
            contentType: "application/json; charset=utf-8",
            success: function (response) {
                $("#ConfirmDeleteDiv").html(response);
                ToggleConfirmDeleteModal();
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    };

    function DeletePost(postId) {
        $.ajax({
            type: "POST",
            url: "Posts/DeletePost/" + postId,
            success: function () {
                var postFullId = '#post' + postId;
                $(postFullId).remove();
            },
            error: function () {
                alert("Error Deleting Post");
            }
        });
        ToggleConfirmDeleteModal();
    }

    function DeleteComment(commentId) {

        $.ajax({
            type: "GET",
            url: "Posts/DeleteComment/",
            data: { objId: commentId },
            contentType: "application/json; charset=utf-8",
            success: function () {
                alert("success");

                document.getElementById(commentId).remove();
            },
            error: function () {
                alert("Error Deleting Comment");
            }
        });
        ToggleConfirmDeleteModal();
    }

    function ToggleConfirmDeleteModal() {
        $("#ConfirmDeletePopupContainer").modal("toggle");
    }

    function EditPostModal(postId) {
        $.ajax({
            type: "GET",
            url: "Posts/EditPostModal/" + postId,
            success: function (response) {
                $("#EditPostDiv").html(response);
                $("#EditPostPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    }

    function EditCommentModal(commenObj) {

        $.ajax({
            type: "GET",
            url: "Posts/EditCommentModal/",
            data: { objId: commenObj },
            success: function (response) {
                $("#EditCommentDiv").html(response);
                $("#EditCommentPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    }

    function EditComment(postId, userId, time) {

        var text = document.querySelector('#EditCommentText').value;
        var data = new FormData();
        var files = $("#commentImgSelector").get(0).files;
        var src = document.querySelector('#EditCommentImg').src;
        var isImgSelected = src.includes('jpg') || src.includes('jpeg');

        if (text == "" && !isImgSelected) {
            alert("Comment cannot be empty");
            return;
        }


        if (files.length > 0) {
            data.append("commentImg", files[0]);
        }

        data.append("commentText", text);
        data.append("commentTime", time);
        data.append("postId", postId);
        data.append("userId", userId);
        if (isImgSelected) {
            data.append("removeImg", false);
        }
        else {
            data.append("removeImg", true);
        }

        $.ajax({
            type: "POST",
            url: "Posts/EditComment",
            data: data,
            processData: false,
            contentType: false,
            success: function (response) {

                var respPostId = Object.values(response)[0];
                var userId = Object.values(response)[1];
                var commentTime = Object.values(response)[3];
                var respText = Object.values(response)[4];
                var respImg = Object.values(response)[5];


                var imgDivId = 'CommentImgDiv*' + respPostId + "*" + userId + "*" + commentTime;
                var textDivId = 'CommentTextDiv*' + respPostId + "*" + userId + "*" + commentTime;


                if (respImg == null) {
                    respImg = "";
                }

                if (document.getElementById(imgDivId).children.length > 0) {

                    var ImgTag = (document.getElementById(imgDivId)).firstElementChild;
                    if (respImg == "")
                        ImgTag.src = "";
                    else
                        ImgTag.src = '/CommentsPics/' + respImg;
                }
                else {
                    var ImgTag = '<img class="img-fluid" src="/CommentsPics/' + respImg + '" />';
                    document.getElementById(imgDivId).innerHTML += ImgTag;
                }

                if (respText != null) {

                    if (document.getElementById(textDivId).children.length > 0) {

                        var TextTag = document.getElementById(textDivId).firstElementChild;
                        TextTag.innerText = respText;
                    }
                    else {
                        var TextTag = '<p class="col-form-label">' + respText + '</p>';
                        document.getElementById(textDivId).innerHTML += TextTag;
                    }

                }

            },
            error: function () {
                alert("Error Editing Comment");
            }
        });
    }

    function readURL(input, selector) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                $(selector).attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }

    function ResetFile() {
        document.querySelector('#postImgSelector').remove();
        document.querySelector('#postImgSelectorDiv').innerHTML += '<input type="file" name="file" id="postImgSelector" style="width: 100%;" onchange="readURL(this)" />';
        document.querySelector('#EditpostImg').src = "";

    }
    //function FindUser(id) {

    //    $.ajax({
    //        type: "GET",
    //        url: "Posts/UserInfoModal/" + id,
    //        success: function (response) {
    //         //   $("#UserInfpPopupContainer").modal("toggle");
    //        },
    //        error: function () {
    //            alert("Error retreiving Users");
    //        }
    //    });
    //};
</script>
