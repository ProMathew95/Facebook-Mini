@using Microsoft.AspNetCore.Identity
@using System.Security.Claims;
@using System.Drawing;
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

@model Facebook_project.Models.ViewModels.PostViewModel
@{
    ViewData["Title"] = "Home Page";
    ViewData["id"] = 0;
}

<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>


@if (SignInManager.IsSignedIn(User))
{
    <br />
    <br />
    <div class="container">
        <div class="row">
            <div class="col-3">
                <i class="btn fas fa-user-friends" onclick="FriendRequestsModal()"></i>
            </div>
            <div class="col-8">
                <div class="dropdown">
                    <input type="text" placeholder="Search.." id="myInput" onkeyup="Search()" onfocus="showResults()" onfocusout="hideResults()">
                    <div id="myDropdown" class="dropdown-content show">
                        @*search Results Here*@
                    </div>
                </div>
            </div>
        </div>
    </div>




    <p>
        @*<button id="CreatePost" type="button" class="btn btn-success"
                    data-toggle="modal" data-target="#openModal">
                Create Post
            </button>*@

        <div class="container">
            <div class="row">


                <input type="text" style="height: 100px" readonly id="CreatePost" class="col-12"
                       data-toggle="modal" data-target="#openModal" value="What's on your mind" />

            </div>
        </div>
    </p>



    <partial name="~/Views/Posts/_Create.cshtml" />

    @*<partial name="~/Views/Posts/_Likes.cshtml" view-data="ViewData"/>*@

    <div id="LikesDiv"></div>
    <div id="FriendRequestsDiv"></div>

    <div id="postsContainer" class="container">
        @foreach (var item in Model.IncommingPosts)
        {
            string PostID = $"post{item.PostId}";

            <div id="@PostID" class="border mt-5">
                <div class="row">
                    <div class="col-3">
                        <p class="col-form-label text-center">
                            <img src="~/ProfilPics/@item.Publisher.PhotoURL" class="navbar-toggler-icon" />
                            <a href="#">@item.Publisher.FullName</a>
                        </p>
                    </div>
                    <div class="col-6">
                        <p class="col-form-label">
                            @item.Text
                        </p>


                        @{
                            if (@item.PictureURL != null)
                            {
                                <div class="col-12">
                                    <img class="img-fluid" src="~/PostsPics/@item.PictureURL" />
                                </div>

                            }
                        }

                        <p>Comment</p>

                        <form method="post" enctype="multipart/form-data">
                            @{string CommentAreaID = $"commentArea{item.PostId}";}
                            <input type="text" id="@CommentAreaID" />
                            <input type="button" value="Submit" onclick="addComment(@item.PostId)" />
                            @{string CommentImgID = $"commentImg{item.PostId}";}
                            <input type="file" name="file" id="@CommentImgID" />
                        </form>


                        <br />

                        @if (Model.LikedPostsIds.Contains(item.PostId))
                        {
                            <i class="btn fa fa-thumbs-down" onclick="Like(this,@item.PostId)"></i>
                        }
                        else
                        {
                            <i class="btn fa fa-thumbs-up" onclick="Like(this,@item.PostId)"></i>
                        }
                        @{string likesId = $"likes{item.PostId}";}
                        <a id="@likesId" class="btn likes" onclick="LikesModal(@item.PostId)">@item.Like.Count(l => l.isLiked)</a>

                    </div>

                    <div class="col-3">
                        <p class="col-form-label text-center">
                            @item.Date
                        </p>
                        <i class="fas fa-trash-alt" onclick="DeletePost(@item.PostId)"></i>
                    </div>
                </div>

                @foreach (var comment in item.Comment)
                {
                    if (!comment.isRemoved)
                    {
                        string CommentID = $"comment*{comment.PostID}*{comment.UserID}*{comment.Time.ToString().Replace(" ","")}";
                    <div id="@CommentID" class="border mt-2">
                        <div class="row">
                            <div class="col-4"></div>
                            <div class="col-4">
                                <p class="col-form-label">
                                    <img src="~/ProfilPics/@item.Publisher.PhotoURL" class="navbar-toggler-icon" />
                                    <a href="#">@comment.User.FullName</a>
                                </p>
                                <p class="col-form-label">@comment.Text</p>

                                <div class="col-12">
                                    @{
                                        if (comment.PictureURL != null)
                                        {
                                            <img class="img-fluid" src="~/CommentsPics/@comment.PictureURL" />
                                        }
                                    }
                                </div>

                            </div>
                            <div class="col-4">@comment.Time</div>
                            <i class="fas fa-trash-alt" onclick="DeleteComment('@CommentID')"></i>
                        </div>
                    </div>
                        }
                    }

            </div>
        }
    </div>

}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script src="https://netdna.bootstrapcdn.com/bootstrap/3.1.1/js/bootstrap.min.js"></script>

<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.11.1/jquery.validate.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/mvc/4.0/jquery.validate.unobtrusive.min.js"></script>


<script type="text/javascript">

    $(document).ready(function () {
        $("#CreatePost").click(function () {
            $("#PopupContainer").modal("toggle");
        });
    });

    function addComment(postId) {
        var id = '#commentArea' + postId;
        var comment = document.querySelector(id).value;

        var CommentImgId = '#commentImg' + postId;

        var data = new FormData();
        var files = $(CommentImgId).get(0).files;

        if (files.length > 0) {
            data.append("CommentImg", files[0]);
        }

        data.append("Comment", comment);
        data.append("PostId", postId);

        $.ajax({
            type: "POST",
            url: "Posts/AddComment",
            data: data,
            processData: false,
            contentType: false,

            success: function (response) {
                var respPostId = Object.values(response)[0];
                var respUserId = Object.values(response)[1];
                var respUserName = Object.values(response)[2];
                var respDate = Object.values(response)[3];
                var respText = Object.values(response)[4];
                var respImg = Object.values(response)[5];
                var respPhotoURL = Object.values(response)[6];


                var newComment = '<div id="comment' + respPostId + respUserId + respDate + '" class="border mt-2"> <div class="row">';
                newComment += '<div class="col-4"></div> <div class="col-4"><p class="col-form-label">';
                newComment += '<img src="/ProfilPics/' + respPhotoURL + '" class="navbar-toggler-icon">';
                newComment += '<a href="#">' + respUserName + '</a>';
                newComment += '</p><p class="col-form-label">' + respText + '</p>';
                if (respImg != null && respImg != "") {
                    newComment += '<div class="col-12"><img class="img-fluid" src="/CommentsPics/' + respImg + '" /> </div>';
                }
                newComment += '</div><div class="col-4">' + respDate + '</div></div></div>'

                var targetPostId = "#post" + postId;
                var targetPost = document.querySelector(targetPostId);
                targetPost.innerHTML += newComment;

            },
            error: function (response) {
                alert("Error submiting comment");
            }
        });

        document.querySelector(id).value = "";
    }

    function addPost() {
        var postText = document.querySelector("#postText").value;

        var data = new FormData();
        var files = $("#postImg").get(0).files;

        if (files.length > 0) {
            data.append("postImg", files[0]);
        }

        data.append("postText", postText);

        $.ajax({
            type: "POST",
            url: "Posts/AddPost",
            data: data,
            processData: false,
            contentType: false,

            success: function (response) {
                var respPostId = Object.values(response)[0];
                var respUserId = Object.values(response)[1];
                var respUserName = Object.values(response)[2];
                var respDate = Object.values(response)[3];
                var respText = Object.values(response)[4];
                var respImg = Object.values(response)[5];
                var respPhotoURL = Object.values(response)[6];


                var newPost = '<div id="post' + respPostId + '" class="border mt-5"> <div class="row"> <div class="col-3">';
                newPost += '<p class="col-form-label text-center"><img src="/ProfilPics/' + respPhotoURL + '" class="navbar-toggler-icon">';
                newPost += '<a href="#">' + respUserName + '</a></p></div>';
                newPost += '<div class="col-6"><p class="col-form-label">' + respText + '</p>';
                if (respImg != null && respImg != "") {
                    newPost += '<div class="col-12"><img class="img-fluid" src="/PostsPics/' + respImg + '" /> </div>';
                }
                newPost += '<p>Comment</p><form method="post" enctype="multipart/form-data">';
                newPost += '<input type="text" id="commentArea' + respPostId + '">';
                newPost += '<input type="button" value="Submit" onclick="addComment(' + respPostId + ')">';
                newPost += '<input type="file" name="file" id="commentImg' + respPostId + '">';
                newPost += '<br><i class="btn fa fa-thumbs-up" onclick="Like(this,' + respPostId + ')" aria-hidden="true"></i>';
                newPost += '<a id="likes' + respPostId + '" class="btn likes" onclick="LikesModal(' + respPostId + ')">0</a>';
                newPost += '</div><div class="col-3"><p class="col-form-label text-center">';
                newPost += respDate + '</p></div></div></div>';

                document.querySelector("#postsContainer").insertAdjacentHTML('afterbegin', newPost);

            },
            error: function (response) {
                alert("Error submiting Post");
            }
        });

        $("#PopupContainer").modal("toggle");
    }

    function LikesModal(id) {

        $.ajax({
            type: "GET",
            url: "Posts/LikesModal/" + id,
            success: function (response) {
                $("#LikesDiv").html(response);
                $("#LikesPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    };

    function FriendRequestsModal() {

        $.ajax({
            type: "GET",
            url: "Friends/FriendRequestsModal/",
            success: function (response) {
                $("#FriendRequestsDiv").html(response);
                $("#FriendRequestsPopupContainer").modal("toggle");
            },
            error: function () {
                alert("Error retreiving Users");
            }
        });
    };

    function Like(caller, id) {

        var counterid = '#likes' + id;
        var likeCounter = document.querySelector(counterid);
        var countVal = likeCounter.innerHTML;

        if (caller.classList.contains("fa-thumbs-up")) {


            $.ajax({
                type: "POST",
                url: "Posts/Like/" + id,
                success: function () {
                    countVal++;
                    likeCounter.innerHTML = countVal;
                    caller.classList.remove("fa-thumbs-up");
                    caller.classList.add("fa-thumbs-down");
                },
                error: function () {
                    alert("Error while liking post");
                }
            });

        }
        else if (caller.classList.contains("fa-thumbs-down")) {


            $.ajax({
                type: "POST",
                url: "Posts/Dislike/" + id,
                success: function () {
                    countVal--;
                    likeCounter.innerHTML = countVal;
                    caller.classList.remove("fa-thumbs-down");
                    caller.classList.add("fa-thumbs-up");
                },
                error: function () {
                    alert("Error while Disliking post");
                }
            });


        }



    }

    function FriendRequest(caller, ReqUserId) {
        var RID = '#request' + ReqUserId;
        var RequestElement = document.querySelector(RID);
        if (caller.classList.contains("Accept")) {
            $.ajax({
                type: "POST",
                url: "Friends/AcceptRequest/" + ReqUserId,
                success: function () {
                    RequestElement.remove();
                },
                error: function () {
                    alert("Error while liking post");
                }
            });
        }
        else if (caller.classList.contains("Reject")) {

            $.ajax({
                type: "POST",
                url: "Friends/RejectRequest/" + ReqUserId,
                success: function () {
                    RequestElement.remove();
                },
                error: function () {
                    alert("Error while liking post");
                }
            });
        }
    }

    function Search() {
        var searchKey = $('#myInput').val();

        $.ajax({
                type: "GET",
                url: "Friends/Search/" + searchKey,
                success: function (response) {
                    console.log(response);

                    var tagsStr = "";
                    for(var i = 0; i < response.length; i++) {
                        var obj = response[i];

                        
                        if (obj.hasOwnProperty("fullName") &&
                            obj.hasOwnProperty("id") &&
                            obj.hasOwnProperty("photoURL")) {

                            var fullName = obj['fullName'];
                            var userId = obj['id'];
                            var photoUrl = obj['photoURL'];

                            tagsStr += '<div class="col-8"><img class="navbar-toggler-icon" src="/ProfilPics/' + photoUrl + '" />';
                            tagsStr += '<a class="ml-2 d-inline" id="' + userId + '" href = "#" > ' + fullName + '</a></div >';

                        }
                    }

                    document.querySelector("#myDropdown").innerHTML = tagsStr;



                    

                },
                error: function () {
                    alert("Error");
                }
            });
    }

    function showResults() {
        var results = document.querySelector("#myDropdown");
        if (!results.classList.contains("show")) {
            results.classList.add("show");
        }
    }

    function hideResults() {
        var results = document.querySelector("#myDropdown");
        if (results.classList.contains("show")) {
            results.classList.remove("show");
        }
    }

    function DeletePost(postId) {

        $.ajax({
                type: "POST",
                url: "Posts/DeletePost/" + postId,
            success: function () {
                var postFullId = '#post' + postId;
                $(postFullId).remove();
                },
                error: function () {
                    alert("Error Deleting Post");
                }
            });
    }

    function DeleteComment(commentId) {

        var commentObj = {
            "commentId": commentId
        }

        $.ajax({
                type: "Post",
            url: "Posts/DeleteComment/",
            data:JSON.stringify(commentObj), 
            dataType: "json",  
            contentType: "application/json; charset=utf-8",  
            success: function () {
                alert("success");

                document.getElementById(commentId).remove();
                },
                error: function () {
                    alert("Error Deleting Comment");
                }
            });
    }

</script>
